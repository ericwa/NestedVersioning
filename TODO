TODO
====
[ ] (Feb 11/2012) add a feature like Quentin's COSCustomTrack. of particular interest
				  would be a "local undo" - linear undo/redo on all objects in a persistent
				  root _except_ the current versions of branches would be unaltered.
				  this would support the QuArK-explorer use case, of
				  undo/redo in the project window which doesn't affect the versions of the
				  embedded documents.
[ ] (Feb 8/2012)  add code to search for all _different_ (i.e. curentVersion not same)
                  branches of a given persistent root, for making a UI summary
[ ] (Feb 8/2012)  add support for merging changes from the store into an editing 
                  context's in-memory tree, (in particular for when a commit is
				  made on a nested persistent root while a context stays open on 
				  one of its parents) so all of the ugly "reopen context"
				  code in the tests can be removed.

[x] (Feb 5/2012)  refactor COPersistentRootEditingContext+PersistentRoots.h methods
[x] (Feb 5/2012)  finish rewriting tests to use COSubtree
[x] (Feb 5/2012)  write more tests? -> wrote "pull" test
[ ] (Feb 5/2012)  convert docs-only tests to code?

[x] (Nov 17/2011) rewrite store classes to use COStoreItem
[ ] (Nov 30/2011) investigate a lazy loading/faulting api
[ ] (Nov 30/2011) refactor editing context api
[ ] (dec 5)       search
[x] (dec 5)       work on storebrowser
[x] (dec 6)       make COStoreItem immutable. 
[ ] (dec 6)       implement an efficient mutable tree
                  by layering a diff together with an efficient immutable tree
                  this should be decoupled from the editing context code, and 
                  should become a thin wrapper around it.
[x] (dec 15)      fix up graph drawing
[wip] (dec 15)      port over merge code.
[ ] (dec 15)      come up with a way of representing merge conflicts
[x] (dec 15)      finally finish the mutable tree wrapper over COItem.
                  it should enforce the various validity constraints
				  (only one copy of a embedded item per tree, etc.), and
				  support joining trees (if they don't conflict),
				  detatching trees, moving subtrees. it should also be usable
				  standalone, with just COType and COItem classes. (no dependencies
				  on stores/persistent root editing context/ etc.)
last:

[ ] migrate to sqlite