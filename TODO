TODO
====

[x] (Mar 28/2012) display undo/redo labels in menu; implement an NSUndoManager replacement
[x] (Mar 20/2012) make selective do/undo aware of nested persistent roots
[x] (Mar 13/2012) finish COSubtreeDiff
[ ] (Feb 22/2012) StoreBrowser: don't abort when deleting a branch/proot that was previously opened
[ ] (Feb 22/2012) StoreBrowser: don't abort when corrupting a branch/proot's metadata
[x] (Feb 21/2012) investigate why undo of deleting an embedded item from the tag library is broken
[x] (Feb 21/2012) StoreBrowser: gray out undo/redo buttons when undo/redo is impossible
[cancelled] (Feb 21/2012) doing undo/redo on photolibrary/photo1 should produce commits in photolibrary
				  which are skipped by default when undoing/redoing in photolibrary
[x] (Feb 21/2012) StoreBrowser: add support for inserting new string attributes
[x] (Feb 21/2012) StoreBrowser: add support for renaming attribute keys
[x] (Feb 15/2012) add metadata to "commit in child" commits. 
[x] (Feb 15/2012) add support for undo/redo to skip "commit in child" commits. 
[ ] (Feb 15/2012) work out merge metadata. is attempting to be concious of individual cherry-picked
				  commits worthwhile? is it going to work?
[ ] (Feb 15/2012) decide what to do about merge conflicts. concerns to resolve:
					- only providing "choosing between hunks in a COSequenceDiff" is not
					  sufficient for conflict resolution.
						+ user might need to make manual changes to correctly resolve the change
						+ the granularity that makes sense could differ depending on application
						  (some might make sense to make hunk-level accept/reject resolution,
						   others might be picking between object A with all edits applied and object B)
				    - seems good to be able to switch branches while there are conflicts pending resolution on dev branch,
					  continue working on stable branch, and return to dev branch later to complete the merge
					- When conflict resolution is complete, we want "1 commit" on the "target branch"
					  with special metadata saying it represents commits X through Y from the "source branch"
					  cherry-picked onto the target branch.
					- anything else...?
[ ] (Feb 15/2012) StoreBrowser: implement persistent root diff window, including showing changes in
				  nested persistent roots, and showing conflicts
[x] (Feb 15/2012) StoreBrowser: implement diffing two arbitrary commits picked from the history graph
[x] (Feb 15/2012) StoreBrowser: implement cherry-pick (selective apply) by right-clicking on a commit
                  in the commit graph.
[x] (Feb 15/2012) StoreBrowser: implement selective undo by right-clicking on a commit
                  in the commit graph.
[x] (Feb 15/2012) implement merge for item and subtree. handle conflicts caused by an
                  embedded item being moved to two different places at once.
[x] (Feb 12/2012) port over merge code for all the basic containers.
[ ] (Feb 11/2012) add a feature like Quentin's COSCustomTrack. of particular interest
				  would be a "local undo" - linear undo/redo on all objects in a persistent
				  root _except_ the current versions of branches would be unaltered.
				  this would support the QuArK-explorer use case, of
				  undo/redo in the project window which doesn't affect the versions of the
				  embedded documents.
[ ] (Feb 8/2012)  add code to search for all _different_ (i.e. curentVersion not same)
                  branches of a given persistent root, for making a UI summary
[ ] (Feb 8/2012)  add support for merging changes from the store into an editing 
                  context's in-memory tree, (in particular for when a commit is
				  made on a nested persistent root while a context stays open on 
				  one of its parents) so all of the ugly "reopen context"
				  code in the tests can be removed.

[x] (Feb 5/2012)  refactor COPersistentRootEditingContext+PersistentRoots.h methods
[x] (Feb 5/2012)  finish rewriting tests to use COSubtree
[x] (Feb 5/2012)  write more tests? -> wrote "pull" test
[ ] (Feb 5/2012)  convert docs-only tests to code?

[x] (Nov 17/2011) rewrite store classes to use COStoreItem
[ ] (Nov 30/2011) investigate a lazy loading/faulting api
[x] (Nov 30/2011) refactor editing context api
[ ] (dec 5)       search
[x] (dec 5)       work on storebrowser
[x] (dec 6)       make COStoreItem immutable. 
[x] (dec 6)       implement an efficient mutable tree
                  by layering a diff together with an efficient immutable tree
                  this should be decoupled from the editing context code, and 
                  should become a thin wrapper around it.
[x] (dec 15)      fix up graph drawing
[x] (dec 15)      port over (primitive ObjC collection) merge code.
[x] (dec 15)      come up with a way of representing (primitive ObjC collection) merge conflicts
[x] (dec 15)      finally finish the mutable tree wrapper over COItem.
                  it should enforce the various validity constraints
				  (only one copy of a embedded item per tree, etc.), and
				  support joining trees (if they don't conflict),
				  detatching trees, moving subtrees. it should also be usable
				  standalone, with just COType and COItem classes. (no dependencies
				  on stores/persistent root editing context/ etc.)
last:

[ ] migrate to sqlite