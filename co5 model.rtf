{\rtf1\ansi\ansicpg1252\cocoartf1138\cocoasubrtf230
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid1}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}}
\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\f0\fs24 \cf0 \ul \ulc0 co5 conceptual model\ulnone \
\
a 
\b version
\b0  is immutable. it has a\
	-uuid identifying it\
	-uuids of parent versions to create a history graph\
	-list of \ul all\ulnone  embedded object uuids which can be accessed in that version and links to immutable 
\b embedded objects
\b0  containing their state.\
\
there is a special type of 
\b embedded objects
\b0  called a 
\b persistent root
\b0 . a persistent root has a pointer to a branch. it is also a normal embedded object\
so it can have fields like name, etc.\
\
a 
\b branch
\b0  is basically a pointer to a 
\b version. 
\b0 \
\
that\'92s it; we just need to work out some details.\
\
\ul embedded object model\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural
\cf0 \ulnone \
-a version has a 'root' embedded object.\
-object's lifetime is determined entirely by
\f1\fs22 \CocoaLigature0  kCOPrimitiveTypeEmbeddedItem 
\f0\fs24 relationships, much like a unix filesystem without hard links. * (if this isn't flexible enough, we can always implement a GC or refcounting solution.)\CocoaLigature1 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural
\cf0 \
\
- when we copy/move an embedded object from one persistent root to another, it keeps the same uuid. are there any cases where this could cause problems? what if the destination already has objects with some/all of those uuids? probably keep the familiar filesystem semantics:\
\pard\tx220\tx720\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\li720\fi-720\pardirnatural
\ls1\ilvl0\cf0 	\'95 copy & paste in the same directory (for CO: in the same persistent root), and it makes sense to assign new UUIDs since otherwise the copy&paste would do nothing. \
\ls1\ilvl0	\'95 copy & paste in to another directory (for CO: into another persistent root), and it makes sense to keep the same UUIDs, and overwrite any existing destination objects.}